name: Infrastructure - Plan and apply
on:
  workflow_dispatch:

  schedule:
    - cron: "*/1 * * * *"
jobs:
  build:
    name: Deploy and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
      - name: Terraform format
        run: terraform fmt -check -recursive
      - name: Terraform init
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
      - name: Terraform validate
        run: terraform validate

      - name: Terraform Workspace Select
        run: terraform workspace select -or-create dev
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

      - name: Terraform plan
        id: plan
        run: |
          TF_PLAN=$(terraform plan)
          echo "TF_PLAN=${TF_PLAN}" >> $GITHUB_ENV
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
      - name: Check for Drift
        if: ${{ contains(needs.build.outputs.TF_PLAN, '2') }}
        run: echo "Drift detected."
      - name: Reconcile Drift
        if: ${{ contains(needs.build.outputs.TF_PLAN, '2') }}
        run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
