name: Infrastructure - Plan and apply
on:
  workflow_dispatch:
  schedule:
    - cron: "*/1 * * * *"
jobs:
  resolve-env:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.set-env.outputs.env_name }}
    steps:
      - name: Set environment
        id: set-env
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ] || [ "${{ github.event.inputs.environment }}" = "prod" ]; then
            echo "env_name=prod" 
          else
            echo "env_name=dev"
          fi
  build:
    name: Deploy and Release
    runs-on: ubuntu-latest
    needs: [resolve-env]
    environment: ${{ needs.resolve-env.outputs.env_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
      - name: Terraform format
        run: terraform fmt -check -recursive
      - name: Terraform init
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Terraform validate
        run: terraform validate
      - name: Switch to required workspace
        run: terraform workspace select -or-create $WORKSPACE
        env:
          WORKSPACE: ${{ needs.resolve-env.outputs.env_name }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Terraform plan
        id: plan
        run: |
          TF_PLAN=$(terraform plan -no-color -detailed-exitcode)
          echo "TF_PLAN=${TF_PLAN}" >> $GITHUB_ENV
      - name: Check for Drift
        if: ${{ contains(needs.build.outputs.TF_PLAN, '2') }}
        run: echo "Drift detected."
      - name: Reconcile Drift
        if: ${{ contains(needs.build.outputs.TF_PLAN, '2') }}
        run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
